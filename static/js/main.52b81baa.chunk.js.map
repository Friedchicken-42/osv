{"version":3,"sources":["beatmaps.js","users.js","card.js","deck.js","view.js","App.js","reportWebVitals.js","index.js"],"names":["Beatmap","name","type","className","Beatmaps","useState","beatmaps","setBeatmaps","onClick","event","length","slice","User","process","image","setImage","update_image","axios","get","params","k","u","then","response","data","get_user","user_id","onKeyDown","e","key","target","value","onBlur","src","alt","Users","users","Array","keys","map","el","Data","isNaN","this","props","React","Component","Card","score","countgeki","parseInt","count300","countkatu","count100","count50","countmiss","acc","mode","toFixed","enabled_mods","mods","forEach","i","push","includes","splice","indexOf","state","rank","replace","username","mod","maxcombo","Math","round","pp","Deck","beatmap","style","backgroundImage","beatmapset_id","title","version","difficultyrating","scores","filter","sort","s0","s1","View","decks","create_decks","bind","from_beatmaps","promises","beatmap_url","x","split","beatmap_id","b","m","all","responses","r","parseFloat","user","console","log","setState","multiplayer","toLowerCase","mp","match","players_name","games","game","Object","every","element","play_mode","catch","_","document","getElementById","from","getElementsByName","from_multiplayer","Multiplayer","set_title","mp_title","id","Players","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52b81baa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Beatmaps = () => {\r\n    const [beatmaps, setBeatmaps] = useState([<Beatmap key=\"0\" />])\r\n\r\n    const add_beatmap = event => setBeatmaps([...beatmaps, <Beatmap key={beatmaps.length} />])\r\n\r\n    const remove_beatmap = event => {\r\n        if (beatmaps.length > 0) {\r\n            setBeatmaps(beatmaps.slice(0, beatmaps.length - 1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Beatmap link</h2>\r\n            {beatmaps}\r\n            <button className=\"btn\" onClick={add_beatmap}>+</button>\r\n            <button className=\"btn\" onClick={remove_beatmap}>-</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Beatmap = () => {\r\n    return (\r\n        <div>\r\n            <input name='beatmap' type=\"text\" className='size'></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beatmaps;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nconst Users = () => {\r\n\r\n    const users = [...Array(4).keys()].map(el => <User key={el} />)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Usernames</h2>\r\n            <div>\r\n                {users}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst User = () => {\r\n    const [image, setImage] = useState(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n\r\n    const get_user = (name) =>\r\n        axios.get('https://osu.ppy.sh/api/get_user', { params: { k: key, u: name, type: 'string' } })\r\n            .then(response => {\r\n                return response.data[0];\r\n            })\r\n\r\n\r\n    const update_image = (name) => {\r\n        if (name === '') {\r\n            setImage(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n        } else {\r\n            get_user(name)\r\n                .then(data => {\r\n                    if (data) setImage('http://s.ppy.sh/a/' + data.user_id)\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            update_image(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='user-box'>\r\n            <div>\r\n                <input name='user' type='text' onKeyDown={onEnter} onBlur={(e) => update_image(e.target.value)}></input>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <img className='user-image' src={image} alt='user pfp' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport './deck.css'\r\n\r\nclass Data extends React.Component {\r\n    render() {\r\n        const value = isNaN(this.props.value) ? 0 : this.props.value;\r\n        return (\r\n            <div>\r\n                <div className='data-header'>{this.props.name}</div>\r\n                <div className='data-value'>{value}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let score = props.score\r\n        let data = []\r\n\r\n        const countgeki = parseInt(score.countgeki)\r\n        const count300 = parseInt(score.count300)\r\n        const countkatu = parseInt(score.countkatu)\r\n        const count100 = parseInt(score.count100)\r\n        const count50 = parseInt(score.count50)\r\n        const countmiss = parseInt(score.countmiss)\r\n\r\n        let acc = 0\r\n        if (props.mode === '0') {\r\n            acc = (50 * count50 + 100 * count100 + 300 * count300) / (300 * (countmiss + count50 + count100 + count300))\r\n            data = [\r\n                <Data key={0} name='300' value={count300} />,\r\n                <Data key={1} name='100' value={count100} />,\r\n                <Data key={2} name='50' value={count50} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '1') {\r\n            acc = (.5 * count100 + count300) / (countmiss + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Great' value={count300} />,\r\n                <Data key={1} name='Good' value={count100} />,\r\n                <Data key={2} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '2') {\r\n            acc = (count50 + count100 + count300) / (countmiss + countkatu + count50 + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Fruits' value={count300} />,\r\n                <Data key={1} name='Ticks' value={count100} />,\r\n                <Data key={2} name='Drop Miss' value={countkatu} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '3') {\r\n            acc = (50 * count50 + 100 * count100 + 200 * countkatu + 300 * (count300 + countgeki)) / (300 * (countmiss + count50 + count100 + countkatu + count300 + countgeki))\r\n            data = [\r\n                <Data key={0} name='MAX' value={countgeki} />,\r\n                <Data key={1} name='300' value={count300} />,\r\n                <Data key={2} name='200' value={countkatu} />,\r\n                <Data key={3} name='100' value={count100} />,\r\n                <Data key={4} name='50' value={count50} />,\r\n                <Data key={5} name='Miss' value={countmiss} />\r\n            ]\r\n        }\r\n\r\n        score.acc = (acc * 100).toFixed(2)\r\n\r\n        let enabled_mods = parseInt(score.enabled_mods)\r\n\r\n        score.mods = []\r\n        if (enabled_mods !== 0) {\r\n\r\n            const mod_array = ['NF', 'EZ', 'TD', 'HD', 'HR', 'SD', 'DT', 'RX', 'HT', 'NC', 'FL', 'AT', 'SO', 'AP', 'PF']\r\n            mod_array.forEach((el, i) => {\r\n                if (((enabled_mods >>> i) & 1) === 1) {\r\n                    score.mods.push(el)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (score.mods.includes('DT') && score.mods.includes('NC')) {\r\n            score.mods.splice(score.mods.indexOf('DT'), 1)\r\n        }\r\n        if (score.mods.includes('SD') && score.mods.includes('PF')) {\r\n            score.mods.splice(score.mods.indexOf('SD'), 1)\r\n        }\r\n\r\n        this.state = {\r\n            data: data\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let score = this.props.score\r\n        let rank = null;\r\n        if (this.props.rank) {\r\n            rank = (<div className='card-rank'>\r\n                <span>{score.rank.replace('H', '')}</span>\r\n            </div>)\r\n        }\r\n        return (\r\n            <div className={'card card-' + (rank ? '3' : '2')}>\r\n                {rank}\r\n                <div>\r\n                    <div className='card-score'>{score.score}</div>\r\n                    <div className='card-username'>{score.username}</div>\r\n                    <div>{score.mods.map(mod => <img className='card-mod' src={process.env.PUBLIC_URL + '/mods/' + mod + '.png'} alt={mod} key={mod} />)}</div>\r\n                </div>\r\n                <div className='card-data'>\r\n                    <div className='card-row'>\r\n                        <Data key={0} name='Accuracy' value={score.acc} />\r\n                        <Data key={1} name='Max Combo' value={score.maxcombo} />\r\n                        <Data key={2} name='PP' value={Math.round(score.pp)} />\r\n                    </div>\r\n                    <div className='card-row'>\r\n                        {this.state.data}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './card'\r\nimport './deck.css'\r\n\r\nclass Deck extends React.Component {\r\n    render() {\r\n        const beatmap = this.props.beatmap\r\n        return (\r\n            <div className='deck'>\r\n                <div className='beatmap' style={{ backgroundImage: `url(https://assets.ppy.sh/beatmaps/` + beatmap.beatmapset_id + `/covers/cover.jpg)` }}>\r\n                    <div className='beatmap-title'>{beatmap.title}</div>\r\n                    <div className='beatmap-version'>{beatmap.version}</div>\r\n                    <div className='beatmap-sr'>{beatmap.difficultyrating}</div>\r\n                </div>\r\n                <div>\r\n                    {this.props.scores\r\n                        .filter(score => score != null)\r\n                        .sort((s0, s1) => s1.score - s0.score)\r\n                        .map((score, i) => <Card key={i} rank={this.props.rank} score={score} mode={beatmap.mode} />\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck;","import React from 'react'\r\nimport Deck from './deck'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            decks: []\r\n        }\r\n        this.create_decks = this.create_decks.bind(this)\r\n        this.from_beatmaps = this.from_beatmaps.bind(this)\r\n    }\r\n\r\n    from_beatmaps(users, beatmaps) {\r\n        const promises = beatmaps.map(beatmap_url => {\r\n            const x = beatmap_url.split('/').splice(4)\r\n            let mode = x[0].split('#')[1]\r\n            mode = ['osu', 'taiko', 'fruits', 'mania'].indexOf(mode);\r\n            const beatmap_id = x[1]\r\n            return axios.get('https://osu.ppy.sh/api/get_beatmaps', { params: { k: key, b: beatmap_id, m: mode } })\r\n        })\r\n        axios.all(promises).then(responses => {\r\n            responses.forEach(r => {\r\n                const beatmap = r.data[0]\r\n                beatmap.difficultyrating = parseFloat(beatmap.difficultyrating).toFixed(2);\r\n                const promises = users.map(user => axios.get('https://osu.ppy.sh/api/get_scores', { params: { k: key, b: beatmap.beatmap_id, m: beatmap.mode, u: user, type: 'string' } }))\r\n                axios.all(promises).then(responses => {\r\n                    let scores = responses.map(r => r.data[0])\r\n\r\n                    console.log(beatmap.title)\r\n                    this.setState({ decks: [...this.state.decks, <Deck beatmap={beatmap} scores={scores} rank={true} />] })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    from_multiplayer(multiplayer, users) {\r\n        users.forEach(u => u.toLowerCase())\r\n        const mp = multiplayer.split('/').slice(-1)[0]\r\n        axios.get('https://osu.ppy.sh/api/get_match', { params: { k: key, mp: mp } })\r\n            .then(response => {\r\n                const match = response.data\r\n                let players_name = {}\r\n                match.games.forEach(game => game.scores.forEach(score => {\r\n                    players_name[score.user_id] = '';\r\n                }))\r\n\r\n                const promises = Object.keys(players_name).map(user_id => axios.get('https://osu.ppy.sh/api/get_user', { params: { k: key, u: user_id, type: 'id' } }))\r\n                axios.all(promises).then(responses => {\r\n                    responses.forEach(response => {\r\n                        const data = response.data[0]\r\n                        players_name[data.user_id] = data.username\r\n                    })\r\n\r\n                    match.games.forEach(game => {\r\n                        let scores = game.scores\r\n                        scores.forEach(score => {\r\n                            score.username = players_name[score.user_id]\r\n                            if (game.mods !== \"0\") score.enabled_mods = parseInt(game.mods)\r\n                        })\r\n                        scores = scores.map(score => {\r\n                            if (users.length === 0 || users.includes(score.username.toLowerCase())) { return score; }\r\n                            return null;\r\n                        })\r\n                        if (!(scores.every(element => element === null))) {\r\n                            axios.get('https://osu.ppy.sh/api/get_beatmaps', { params: { k: key, b: game.beatmap_id, m: game.play_mode } })\r\n                                .then(response => {\r\n                                    const beatmap = response.data[0]\r\n                                    beatmap.difficultyrating = parseFloat(beatmap.difficultyrating).toFixed(2);\r\n                                    this.setState({ decks: [...this.state.decks, <Deck beatmap={beatmap} scores={scores} rank={false} />] })\r\n                                })\r\n                                .catch(_ => { })\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n    }\r\n\r\n    create_decks(_) {\r\n        this.setState({ decks: [] })\r\n\r\n        const mp = document.getElementById('mp').value\r\n        const beatmaps = Array.from(document.getElementsByName('beatmap'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n        const users = Array.from(document.getElementsByName('user'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n\r\n        if (mp === '') {\r\n            if (users.length === 0) return;\r\n            if (beatmaps.length === 0) return;\r\n\r\n            this.from_beatmaps(users, beatmaps)\r\n\r\n        } else {\r\n            this.from_multiplayer(mp, users)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"view\" onClick={this.create_decks}>View</button>\r\n                {this.state.decks.map((e, i) => <span key={i}>{e}</span>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Beatmaps from './beatmaps'\nimport Users from './users'\nimport View from './view'\nimport './App.css';\n\nconst key = process.env.REACT_APP_KEY;\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Osu Score Viewer</h1>\n\t\t\t<Multiplayer />\n\t\t\t<h4 className=\"line\"><span>or</span></h4>\n\t\t\t<Players />\n\t\t\t<View />\n\t\t</div>\n\t)\n}\n\nconst Multiplayer = () => {\n\tconst [title, set_title] = useState('')\n\n\tconst mp_title = (multiplayer) => {\n\t\tconst mp = multiplayer.split('/').slice(-1)[0]\n\t\taxios.get('https://osu.ppy.sh/api/get_match', { params: { k: key, mp: mp } })\n\t\t\t.then(response => {\n\t\t\t\tconst data = response.data\n\t\t\t\tset_title(data.match.name)\n\n\t\t\t})\n\t\t\t.catch(_ => {\n\t\t\t\tset_title('Multyplayer not found')\n\t\t\t})\n\t}\n\n\tconst onEnter = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tmp_title(e.target.value);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Multiplayer link</h2>\n\t\t\t<input id='mp' type=\"text\" className='size' onKeyDown={onEnter} onBlur={(e) => mp_title(e.target.value)}></input>\n\t\t\t<h2>{title}</h2>\n\t\t</div>\n\t)\n}\n\nconst Players = () => (\n\t<div>\n\t\t<Beatmaps />\n\t\t<Users />\n\t</div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}