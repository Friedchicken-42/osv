{"version":3,"sources":["beatmaps.js","users.js","card.js","deck.js","view.js","App.js","reportWebVitals.js","index.js"],"names":["Beatmap","name","type","className","Beatmaps","useState","beatmaps","setBeatmaps","onClick","event","length","User","process","image","setImage","update_image","axios","get","params","k","u","then","response","data","get_user","user_id","onKeyDown","e","key","target","value","src","alt","Users","users","Array","keys","map","el","Data","this","props","React","Component","Card","score","countgeki","parseInt","count300","countkatu","count100","count50","countmiss","acc","mode","toFixed","state","rank","replace","username","maxcombo","Math","round","pp","Deck","beatmap","style","backgroundImage","beatmapset_id","title","version","difficultyrating","scores","filter","sort","s0","s1","i","View","decks","create_decks","bind","_","setState","mp","document","getElementById","from","getElementsByName","promises","beatmap_url","x","split","splice","indexOf","beatmap_id","b","m","all","responses","forEach","r","parseFloat","user","console","log","Multiplayer","id","Players","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d2b1d249.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Beatmaps = () => {\r\n    const [beatmaps, setBeatmaps] = useState([<Beatmap key=\"0\" />])\r\n\r\n    const add_beatmap = event => setBeatmaps([...beatmaps, <Beatmap key={beatmaps.length} />])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Beatmap link</h2>\r\n            {beatmaps}\r\n            <button className=\"add\" onClick={add_beatmap}>+</button></div>\r\n    )\r\n}\r\n\r\nconst Beatmap = () => {\r\n    return (\r\n        <div>\r\n            <input name='beatmap' type=\"text\" className='fifty-percent'></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beatmaps;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nconst Users = () => {\r\n\r\n    const users = [...Array(4).keys()].map(el => <User key={el} />)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Usernames</h2>\r\n            <div className='container'>\r\n                {users}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst User = () => {\r\n    const [image, setImage] = useState(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n\r\n    const get_user = (name) =>\r\n        axios.get('https://osu.ppy.sh/api/get_user', { params: { k: key, u: name, type: 'string' } })\r\n            .then(response => {\r\n                return response.data[0];\r\n            })\r\n\r\n\r\n    const update_image = (name) => {\r\n        if (name === '') {\r\n            setImage(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n        } else {\r\n            get_user(name)\r\n                .then(data => {\r\n                    if (data) setImage('http://s.ppy.sh/a/' + data.user_id)\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            update_image(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='user-box'>\r\n            <div>\r\n                <input name='user' type='text' onKeyDown={onEnter}></input>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <img className='user-image' src={image} alt='user pfp' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport './deck.css'\r\n\r\nclass Data extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='data-header'>{this.props.name}</div>\r\n                <div className='data-value'>{this.props.value}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let score = props.score\r\n        let data = []\r\n\r\n        const countgeki = parseInt(score.countgeki)\r\n        const count300 = parseInt(score.count300)\r\n        const countkatu = parseInt(score.countkatu)\r\n        const count100 = parseInt(score.count100)\r\n        const count50 = parseInt(score.count50)\r\n        const countmiss = parseInt(score.countmiss)\r\n\r\n        let acc = 0\r\n        if (props.mode === '0') {\r\n            acc = (50 * count50 + 100 * count100 + 300 * count300) / (300 * (countmiss + count50 + count100 + count300))\r\n            data = [\r\n                <Data key={0} name='300' value={count300} />,\r\n                <Data key={1} name='100' value={count100} />,\r\n                <Data key={2} name='50' value={count50} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '1') {\r\n            acc = (.5 * count100 + count300) / (countmiss + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Great' value={count300} />,\r\n                <Data key={1} name='Good' value={count100} />,\r\n                <Data key={2} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '2') {\r\n            acc = (count50 + count100 + count300) / (countmiss + countkatu + count50 + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Fruits' value={count300} />,\r\n                <Data key={1} name='Ticks' value={count100} />,\r\n                <Data key={2} name='Drop Miss' value={countkatu} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '3') {\r\n            acc = (50 * count50 + 100 * count100 + 200 * countkatu + 300 * (count300 + countgeki)) / (300 * (countmiss + count50 + count100 + countkatu + count300 + countgeki))\r\n            data = [\r\n                <Data key={0} name='MAX' value={countgeki} />,\r\n                <Data key={1} name='300' value={count300} />,\r\n                <Data key={2} name='200' value={countkatu} />,\r\n                <Data key={3} name='100' value={count100} />,\r\n                <Data key={4} name='50' value={count50} />,\r\n                <Data key={5} name='Miss' value={countmiss} />\r\n            ]\r\n        }\r\n\r\n        score.acc = (acc * 100).toFixed(2)\r\n\r\n        this.state = {\r\n            data: data\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let score = this.props.score\r\n        let rank = this.props.rank ? (\r\n            <div className='card-rank'>\r\n                <span>{score.rank.replace('H', '')}</span>\r\n            </div>\r\n        ) : null;\r\n        return (\r\n            <div className='container'>\r\n                {rank}\r\n                <div className='card-center'>\r\n                    <div className='card-score'>{score.score}</div>\r\n                    <div className='card-username'>{score.username}</div>\r\n                </div>\r\n                <div className='card-data'>\r\n                    <div className='card-row'>\r\n                        <Data key={0} name='Accuracy' value={score.acc} />\r\n                        <Data key={1} name='Max Combo' value={score.maxcombo} />\r\n                        <Data key={2} name='PP' value={Math.round(score.pp)} />\r\n                    </div>\r\n                    <div className='card-row'>\r\n                        {this.state.data}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './card'\r\nimport './deck.css'\r\n\r\nclass Deck extends React.Component {\r\n    render() {\r\n        const beatmap = this.props.beatmap\r\n        return (\r\n            <div className='deck'>\r\n                <div className='beatmap' style={{ backgroundImage: `url(https://assets.ppy.sh/beatmaps/` + beatmap.beatmapset_id + `/covers/cover.jpg)` }}>\r\n                    <div className='beatmap-title'>{beatmap.title}</div>\r\n                    <div className='beatmap-data'>\r\n                        <div className='beatmap-version'>{beatmap.version}</div>\r\n                        <div className='beatmap-sr'>{beatmap.difficultyrating}</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.props.scores\r\n                        .filter(score => score != null)\r\n                        .sort((s0, s1) => s1.score - s0.score)\r\n                        .map((score, i) => <Card key={i} rank={this.props.rank} score={score} mode={beatmap.mode} />\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck;","import React from 'react'\r\nimport Deck from './deck'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            decks: []\r\n        }\r\n        this.create_decks = this.create_decks.bind(this)\r\n    }\r\n\r\n    create_decks(_) {\r\n        this.setState({ decks: [] })\r\n\r\n        const mp = document.getElementById('mp').value\r\n        const beatmaps = Array.from(document.getElementsByName('beatmap'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n        const users = Array.from(document.getElementsByName('user'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n\r\n        if (mp === '') {\r\n            if (users.length === 0) return;\r\n            if (beatmaps.length === 0) return;\r\n\r\n            const promises = beatmaps.map(beatmap_url => {\r\n                const x = beatmap_url.split('/').splice(4)\r\n                let mode = x[0].split('#')[1]\r\n                mode = ['osu', 'taiko', 'fruits', 'mania'].indexOf(mode);\r\n                const beatmap_id = x[1]\r\n                return axios.get('https://osu.ppy.sh/api/get_beatmaps', { params: { k: key, b: beatmap_id, m: mode } })\r\n            })\r\n            axios.all(promises).then(responses => {\r\n                responses.forEach(r => {\r\n                    const beatmap = r.data[0]\r\n                    beatmap.difficultyrating = parseFloat(beatmap.difficultyrating).toFixed(2);\r\n                    const promises = users.map(user => axios.get('https://osu.ppy.sh/api/get_scores', { params: { k: key, b: beatmap.beatmap_id, m: beatmap.mode, u: user, type: 'string' } }))\r\n                    axios.all(promises).then(responses => {\r\n                        let scores = responses.map(r => r.data[0])\r\n\r\n                        console.log(beatmap.title)\r\n                        this.setState({ decks: [...this.state.decks, <Deck beatmap={beatmap} scores={scores} rank={true} />] })\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"view\" onClick={this.create_decks}>View</button>\r\n                {this.state.decks.map((e, i) => <span key={i}>{e}</span>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React from 'react'\nimport Beatmaps from './beatmaps'\nimport Users from './users'\nimport View from './view'\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Osu Score Viewer</h1>\n\t\t\t<Multiplayer />\n\t\t\t<h4 className=\"line\"><span>or</span></h4>\n\t\t\t<Players />\n\t\t\t<View />\n\t\t</div>\n\t)\n}\n\nconst Multiplayer = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Multiplayer link</h2>\n\t\t\t<input id='mp' type=\"text\" className='fifty-percent'></input>\n\t\t</div>\n\t)\n}\n\nconst Players = () => (\n\t<div>\n\t\t<Beatmaps />\n\t\t<Users />\n\t</div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}