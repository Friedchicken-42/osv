{"version":3,"sources":["beatmaps.js","users.js","card.js","deck.js","view.js","App.js","reportWebVitals.js","index.js"],"names":["Beatmap","name","type","className","Beatmaps","useState","beatmaps","setBeatmaps","onClick","event","length","slice","User","process","image","setImage","update_image","axios","get","params","k","u","then","response","data","get_user","user_id","onKeyDown","e","key","target","value","onBlur","src","alt","Users","users","Array","keys","map","el","Data","this","props","React","Component","Card","score","countgeki","parseInt","count300","countkatu","count100","count50","countmiss","acc","mode","toFixed","enabled_mods","mods","forEach","i","push","includes","splice","indexOf","state","rank","replace","username","mod","maxcombo","perfect","pp","Math","round","Empty","Deck","beatmap","scores","filter","sort","s0","s1","style","backgroundImage","beatmapset_id","title","version","difficultyrating","View","decks","create_decks","bind","from_beatmaps","boxes","document","querySelectorAll","m","get_mods","promises","beatmap_url","x","split","beatmap_id","b","all","responses","r","parseFloat","limit","setState","user","s","deck","multiplayer","toLowerCase","mp","match","players_name","games","game","Object","every","element","play_mode","catch","_","getElementById","from","getElementsByName","from_multiplayer","Multiplayer","set_title","mp_title","id","Mods","entries","htmlFor","Players","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.72d2fa76.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Beatmaps = () => {\r\n    const [beatmaps, setBeatmaps] = useState([<Beatmap key=\"0\" />])\r\n\r\n    const add_beatmap = event => setBeatmaps([...beatmaps, <Beatmap key={beatmaps.length} />])\r\n\r\n    const remove_beatmap = event => {\r\n        if (beatmaps.length > 1) {\r\n            setBeatmaps(beatmaps.slice(0, beatmaps.length - 1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Beatmap link</h2>\r\n            {beatmaps}\r\n            <button className=\"btn\" onClick={add_beatmap}>+</button>\r\n            <button className=\"btn\" onClick={remove_beatmap}>-</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Beatmap = () => {\r\n    return (\r\n        <div>\r\n            <input name='beatmap' type=\"text\" className='size'></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beatmaps;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nconst Users = () => {\r\n\r\n    const users = [...Array(4).keys()].map(el => <User key={el} />)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Usernames</h2>\r\n            <div>\r\n                {users}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst User = () => {\r\n    const [image, setImage] = useState(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n\r\n    const get_user = (name) =>\r\n        axios.get('https://osu.ppy.sh/api/get_user', { params: { k: key, u: name, type: 'string' } })\r\n            .then(response => {\r\n                return response.data[0];\r\n            })\r\n\r\n\r\n    const update_image = (name) => {\r\n        if (name === '') {\r\n            setImage(process.env.PUBLIC_URL + '/avatar-guest.png')\r\n        } else {\r\n            get_user(name)\r\n                .then(data => {\r\n                    if (data) setImage('http://s.ppy.sh/a/' + data.user_id)\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            update_image(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='user-box'>\r\n            <div>\r\n                <input name='user' type='text' onKeyDown={onEnter} onBlur={(e) => update_image(e.target.value)}></input>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <img className='user-image' src={image} alt='user pfp' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport './deck.css'\r\n\r\nclass Data extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='data-header'>{this.props.name}</div>\r\n                <div className='data-value'>{this.props.value}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let score = props.score\r\n        let data = []\r\n\r\n        const countgeki = parseInt(score.countgeki)\r\n        const count300 = parseInt(score.count300)\r\n        const countkatu = parseInt(score.countkatu)\r\n        const count100 = parseInt(score.count100)\r\n        const count50 = parseInt(score.count50)\r\n        const countmiss = parseInt(score.countmiss)\r\n\r\n        let acc = 0\r\n        if (props.mode === '0') {\r\n            acc = (50 * count50 + 100 * count100 + 300 * count300) / (300 * (countmiss + count50 + count100 + count300))\r\n            data = [\r\n                <Data key={0} name='300' value={count300} />,\r\n                <Data key={1} name='100' value={count100} />,\r\n                <Data key={2} name='50' value={count50} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '1') {\r\n            acc = (.5 * count100 + count300) / (countmiss + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Great' value={count300} />,\r\n                <Data key={1} name='Good' value={count100} />,\r\n                <Data key={2} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '2') {\r\n            acc = (count50 + count100 + count300) / (countmiss + countkatu + count50 + count100 + count300)\r\n            data = [\r\n                <Data key={0} name='Fruits' value={count300} />,\r\n                <Data key={1} name='Ticks' value={count100} />,\r\n                <Data key={2} name='Drop Miss' value={countkatu} />,\r\n                <Data key={3} name='Miss' value={countmiss} />\r\n            ]\r\n        } else if (props.mode === '3') {\r\n            acc = (50 * count50 + 100 * count100 + 200 * countkatu + 300 * (count300 + countgeki)) / (300 * (countmiss + count50 + count100 + countkatu + count300 + countgeki))\r\n            data = [\r\n                <Data key={0} name='MAX' value={countgeki} />,\r\n                <Data key={1} name='300' value={count300} />,\r\n                <Data key={2} name='200' value={countkatu} />,\r\n                <Data key={3} name='100' value={count100} />,\r\n                <Data key={4} name='50' value={count50} />,\r\n                <Data key={5} name='Miss' value={countmiss} />\r\n            ]\r\n        }\r\n\r\n        score.acc = (acc * 100).toFixed(2)\r\n\r\n        let enabled_mods = parseInt(score.enabled_mods)\r\n\r\n        score.mods = []\r\n        if (enabled_mods !== 0) {\r\n\r\n            const mod_array = ['NF', 'EZ', 'TD', 'HD', 'HR', 'SD', 'DT', 'RX', 'HT', 'NC', 'FL', 'AT', 'SO', 'AP', 'PF']\r\n            mod_array.forEach((el, i) => {\r\n                if (((enabled_mods >>> i) & 1) === 1) {\r\n                    score.mods.push(el)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (score.mods.includes('DT') && score.mods.includes('NC')) {\r\n            score.mods.splice(score.mods.indexOf('DT'), 1)\r\n        }\r\n        if (score.mods.includes('SD') && score.mods.includes('PF')) {\r\n            score.mods.splice(score.mods.indexOf('SD'), 1)\r\n        }\r\n\r\n        this.state = {\r\n            data: data\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let score = this.props.score\r\n        let rank = null;\r\n        if (this.props.rank) {\r\n            rank = (<div className='card-rank'>\r\n                <span>{score.rank.replace('H', '')}</span>\r\n            </div>)\r\n        }\r\n\r\n        return (\r\n            <div className={'card card-' + (rank ? '3' : '2')}>\r\n                {rank}\r\n                <div>\r\n                    <div className='card-score'>{score.score}</div>\r\n                    <div className='card-username'>{score.username}</div>\r\n                    <div>{score.mods.map(mod => <img className='card-mod' src={process.env.PUBLIC_URL + '/mods/' + mod + '.png'} alt={mod} key={mod} />)}</div>\r\n                </div>\r\n                <div className='card-data'>\r\n                    <div className='card-row'>\r\n                        <Data key={0} name='Accuracy' value={score.acc} />\r\n                        <Data key={1} name='Max Combo' value={score.maxcombo + (score.perfect === \"1\" ? \" (FC)\" : \"\")} />\r\n                        <Data key={2} name='PP' value={typeof score.pp === \"number\" ? Math.round(score.pp) : score.pp} />\r\n                    </div>\r\n                    <div className='card-row'>\r\n                        {this.state.data}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst Empty = () => {\r\n    return (\r\n        <div className='card card-2'>\r\n            <div className='card-rank'>?</div>\r\n            <div className='card-score'>No score found</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Card, Empty };","import React from 'react'\r\nimport { Card, Empty } from './card'\r\nimport './deck.css'\r\n\r\nclass Deck extends React.Component {\r\n    render() {\r\n        const beatmap = this.props.beatmap\r\n        const scores = this.props.scores.length > 0 ? (\r\n            <div>\r\n                {this.props.scores\r\n                    .filter(score => score != null)\r\n                    .sort((s0, s1) => s1.score - s0.score)\r\n                    .map((score, i) => <Card key={i} rank={this.props.rank} score={score} mode={beatmap.mode} />\r\n                    )}\r\n            </div>\r\n        ) : (\r\n            <Empty />\r\n        )\r\n        return (\r\n            <div className='deck'>\r\n                <div className='beatmap' style={{ backgroundImage: `url(https://assets.ppy.sh/beatmaps/` + beatmap.beatmapset_id + `/covers/cover.jpg)` }}>\r\n                    <div className='beatmap-title'>{beatmap.title}</div>\r\n                    <div className='beatmap-version'>{beatmap.version}</div>\r\n                    <div className='beatmap-sr'>{beatmap.difficultyrating}</div>\r\n                </div>\r\n                {scores}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck;","import React from 'react'\r\nimport Deck from './deck'\r\nimport axios from 'axios'\r\n\r\nconst key = process.env.REACT_APP_KEY;\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            decks: []\r\n        }\r\n        this.create_decks = this.create_decks.bind(this)\r\n        this.from_beatmaps = this.from_beatmaps.bind(this)\r\n    }\r\n\r\n    get_mods() {\r\n        let mods = -1;\r\n        let boxes = document.querySelectorAll('input[type=\"checkbox\"]:checked')\r\n        if (boxes.length > 0) mods = 0\r\n        boxes.forEach(m => mods += parseInt(m.value))\r\n        return mods;\r\n    }\r\n\r\n    from_beatmaps(users, beatmaps) {\r\n        let mods = this.get_mods()\r\n        const limit = 3\r\n\r\n        const promises = beatmaps.map(beatmap_url => {\r\n            const x = beatmap_url.split('/').splice(4)\r\n            let mode = x[0].split('#')[1]\r\n            mode = ['osu', 'taiko', 'fruits', 'mania'].indexOf(mode);\r\n            const beatmap_id = x[1]\r\n            return axios.get('https://osu.ppy.sh/api/get_beatmaps', { params: { k: key, b: beatmap_id, m: mode } })\r\n        })\r\n        axios.all(promises).then(responses => {\r\n            responses.forEach(r => {\r\n                const beatmap = r.data[0]\r\n                beatmap.difficultyrating = parseFloat(beatmap.difficultyrating).toFixed(2);\r\n                if (users.length === 0) {\r\n                    axios.get('https://osu.ppy.sh/api/get_scores', { params: { k: key, b: beatmap.beatmap_id, m: beatmap.mode, mods: mods, limit: limit } })\r\n                        .then(response => {\r\n                            this.setState({ decks: [...this.state.decks, <Deck beatmap={beatmap} scores={response.data} rank={true} />] })\r\n                        })\r\n                } else {\r\n                    let promises = users.map(user => axios.get('https://osu.ppy.sh/api/get_scores', { params: { k: key, b: beatmap.beatmap_id, m: beatmap.mode, u: user, type: 'string', mods: mods } }))\r\n                    axios.all(promises).then(responses => {\r\n                        let scores = []\r\n                        responses.forEach(r => r.data.forEach(s => scores.push(s)))\r\n                        let deck = <Deck beatmap={beatmap} scores={scores} rank={true} />\r\n                        this.setState({ decks: [...this.state.decks, deck] })\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    from_multiplayer(multiplayer, users) {\r\n        users = users.map(u => u.toLowerCase())\r\n        const mp = multiplayer.split('/').slice(-1)[0]\r\n        axios.get('https://osu.ppy.sh/api/get_match', { params: { k: key, mp: mp } })\r\n            .then(response => {\r\n                const match = response.data\r\n                let players_name = {}\r\n                match.games.forEach(game => game.scores.forEach(score => {\r\n                    players_name[score.user_id] = '';\r\n                }))\r\n\r\n                const promises = Object.keys(players_name).map(user_id => axios.get('https://osu.ppy.sh/api/get_user', { params: { k: key, u: user_id, type: 'id' } }))\r\n                axios.all(promises).then(responses => {\r\n                    responses.forEach(response => {\r\n                        const data = response.data[0]\r\n                        players_name[data.user_id] = data.username\r\n                    })\r\n\r\n                    match.games.forEach(game => {\r\n                        let scores = game.scores\r\n                        scores.forEach(score => {\r\n                            score.username = players_name[score.user_id]\r\n                            if (game.mods !== \"0\") score.enabled_mods = parseInt(game.mods)\r\n                            score.pp = \"-\"\r\n                        })\r\n                        scores = scores.map(score => {\r\n                            if (users.length === 0 || users.includes(score.username.toLowerCase())) { return score; }\r\n                            return null;\r\n                        })\r\n                        if (!(scores.every(element => element === null))) {\r\n                            axios.get('https://osu.ppy.sh/api/get_beatmaps', { params: { k: key, b: game.beatmap_id, m: game.play_mode } })\r\n                                .then(response => {\r\n                                    const beatmap = response.data[0]\r\n                                    beatmap.difficultyrating = parseFloat(beatmap.difficultyrating).toFixed(2);\r\n                                    this.setState({ decks: [...this.state.decks, <Deck beatmap={beatmap} scores={scores} rank={false} />] })\r\n                                })\r\n                                .catch(_ => { })\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n    }\r\n\r\n    create_decks(_) {\r\n        this.setState({ decks: [] })\r\n\r\n        const mp = document.getElementById('mp').value\r\n        const beatmaps = Array.from(document.getElementsByName('beatmap'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n        const users = Array.from(document.getElementsByName('user'))\r\n            .map(el => el.value)\r\n            .filter(el => el !== '')\r\n\r\n        if (mp === '') {\r\n            if (beatmaps.length === 0) return;\r\n            // if (users.length === 0)\r\n            this.from_beatmaps(users, beatmaps)\r\n\r\n        } else {\r\n            this.from_multiplayer(mp, users)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"view\" onClick={this.create_decks}>View</button>\r\n                {this.state.decks.map((e, i) => <span key={i}>{e}</span>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Beatmaps from './beatmaps'\nimport Users from './users'\nimport View from './view'\nimport './App.css';\n\nconst key = process.env.REACT_APP_KEY;\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Osu Score Viewer</h1>\n\t\t\t<Multiplayer />\n\t\t\t<h4 className=\"line\"><span>or</span></h4>\n\t\t\t<Players />\n\t\t\t<View />\n\t\t</div>\n\t)\n}\n\nconst Multiplayer = () => {\n\tconst [title, set_title] = useState('')\n\n\tconst mp_title = (multiplayer) => {\n\t\tconst mp = multiplayer.split('/').slice(-1)[0]\n\t\taxios.get('https://osu.ppy.sh/api/get_match', { params: { k: key, mp: mp } })\n\t\t\t.then(response => {\n\t\t\t\tconst data = response.data\n\t\t\t\tset_title(data.match.name)\n\n\t\t\t})\n\t\t\t.catch(_ => {\n\t\t\t\tset_title('Multyplayer not found')\n\t\t\t})\n\t}\n\n\tconst onEnter = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tmp_title(e.target.value);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Multiplayer link</h2>\n\t\t\t<input id='mp' type=\"text\" className='size' onKeyDown={onEnter} onBlur={(e) => mp_title(e.target.value)}></input>\n\t\t\t<h2>{title}</h2>\n\t\t</div>\n\t)\n}\n\nconst Mods = () => {\n\tconst mods = {\n\t\t'NM': 0,\n\t\t'NF': 1,\n\t\t'EZ': 2,\n\t\t'HT': 256,\n\t\t'HR': 16,\n\t\t'SD': 32,\n\t\t'PF': 16416,\n\t\t'DT': 64,\n\t\t'NC': 576,\n\t\t'HD': 8,\n\t\t'FL': 1024,\n\t\t'SO': 4096\n\t};\n\treturn (\n\t\t<ul className=\"mods\">\n\t\t\t{Object.entries(mods).map(([mod, value], i) => (\n\t\t\t\t<li key={i}>\n\t\t\t\t\t<input type=\"checkbox\" id={'m' + i} value={value} />\n\t\t\t\t\t<label className=\"label-mod\" htmlFor={'m' + i}><img src={process.env.PUBLIC_URL + '/mods/' + mod + '.png'} alt={mod} /> </label>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nconst Players = () => (\n\t<div>\n\t\t<Beatmaps />\n\t\t<Users />\n\t\t<Mods />\n\t</div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}